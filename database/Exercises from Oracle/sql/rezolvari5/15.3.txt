1.top n analysis
2.drop
3.inline view

1.
create view view1_copy_d_songs as
select title,artist
from copy_d_songs

SELECT * FROM view1_copy_d_songs;

2.
DROP VIEW view1_copy_d_songs;

SELECT * FROM view1_copy_d_songs;
table or view does not exist

3.
SELECT * FROM
(SELECT last_name,salary
from employees
order by salary desc)
where rownum<=3

4.
SELECT e.last_name, e.salary, e.department_id, d.maxsal
FROM employees e,
(SELECT department_id, max(salary) maxsal
FROM employees
GROUP BY department_id) d
WHERE e.department_id = d.department_id
AND e.salary = d.maxsal;

5.
SELECT *
FROM 
(select *
from f_staffs
order by salary) 


1.
CREATE TABLE my_departments
AS ( SELECT * FROM departments);

2.
Foreign key, check and primary key donâ€™t go with copy but not NULL check constraint goes in copy:

I need to look into constraint_name column in results here:
SELECT * FROM user_constraints 
WHERE table_name = UPPER('my_departments');

ALTER TABLE my_departments
DROP CONSTRAINT SYS_C001949178;

3.
create or replace view view_my_departments as
select department_id,department_name
from my_departments

4.
INSERT INTO view_my_departments ( department_id, department_name)
VALUES(105, 'Advertising');

INSERT INTO view_my_departments ( department_id, department_name)
VALUES(120, 'Custodial');

INSERT INTO view_my_departments ( department_id, department_name)
VALUES(130, 'Planning');

5.
alter table my_departments
ADD CONSTRAINT mydpt_departments_id_pk PRIMARY KEY
(department_id);

6.
i cannot introduce NULL into department_id and 
if i use the same id, i will get another error,
because the value will not be unique anymore

7.
insert into view_my_departments
(department_id,department_name)
values(220,'Human Resources')

8.
select* from my_departments

9.
CREATE OR REPLACE VIEW view_my_departments  AS
SELECT department_id , department_name, location_id
FROM my_departments;

10.
as we just inserted the column location_id,it has null values so we need to fix that first
UPDATE  my_departments
SET location_id = 1800
WHERE location_id  IS NULL;

ALTER TABLE my_departments
MODIFY ( location_id NUMBER(4,0) CONSTRAINT my_departments_loc_id_nn NOT NULL);

11.
create or replace view view_loc_dept AS
select d.department_name,l.street_address,l.city,l.state_province
from departments d left outer join locations l
on d.location_id=l.location_id
left outer join countries c on l.country_id=c.country_id
where c.country_name='United States of America';


